# For this project, I downloaded Spotify data from Kaggle of the top 50 songs in 2021.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

Data description:

Popularity - The higher the value the more popular the song is
Danceability - The higher the value, the easier it is to dance to this song
Energy - The energy of a song - the higher the value, the more energtic. song
Key - the key the track is in. Integers map to pitches using standard Pitch Class notation. E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on. 
If no key was detected, the value is -1 (range: -1; 11)
Loudness (dB) - The higher the value, the louder the song
Mode - indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. 
Major is represented by 1 and minor is 0
Speechiness - The higher the value the more spoken word the song contains
Acousticness - The higher the value the more acoustic the song is
Instrumentalness - the number of vocals in a song. The closer the value to 1.0, the more instrumental the song is
Liveness - The higher the value, the more likely the song is a live recording
Valence - The higher the value, the more positive mood for the song
Tempo - the overall estimated tempo of a track in beats per minute (BPM)
Duration - duration of the song in ms
Time signature - an estimated time signature. The time signature (meter) is a notational convention to specify how many beats 
are in each bar (or measure). The time signature ranges from 3 to 7 indicating time signatures of "3/4", to "7/4"


#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

1. What is the average popularity, danceability, and energy by artist and track. 

SELECT artist_name, track_name, avg(popularity), avg(danceability), avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

2. What are the Top 10 songs by popularity and who sings them?

SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10;

3. What artist released the longest song and how long was it? 

SELECT artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;

4. What is the average danceability for the 10 most popular songs? 

SELECT avg(danceability)
FROM BIT_DB.Spotifydata
WHERE track_name IN (SELECT track_name FROM BIT_DB.Spotifydata ORDER BY popularity desc LIMIT 10);

5. Which 3 artists spoke the least amount of words on average per song?

SELECT artist_name, avg(speechiness) as s
FROM BIT_DB.spotifydata
GROUP BY artist_name
ORDER BY s asc
LIMIT 3;

6. In terms of mood, was the most positive song, or the least positive song more popular?

SELECT track_name, min(valence), max(valence), popularity
FROM BIT_DB.Spotifydata
WHERE valence = (SELECT min(valence) FROM BIT_DB.Spotifydata)
UNION ALL
SELECT track_name, min(valence), max(valence), popularity
FROM BIT_DB.Spotifydata
WHERE valence = (SELECT max(valence) FROM BIT_DB.Spotifydata)
ORDER BY popularity;



